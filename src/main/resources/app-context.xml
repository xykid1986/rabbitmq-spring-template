<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
        xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:int="http://www.springframework.org/schema/integration"
        xmlns:int-amqp="http://www.springframework.org/schema/integration/amqp"
        xmlns:rabbit="http://www.springframework.org/schema/rabbit"
        xmlns:int-stream="http://www.springframework.org/schema/integration/stream"
        xsi:schemaLocation="http://www.springframework.org/schema/integration/amqp http://www.springframework.org/schema/integration/amqp/spring-integration-amqp.xsd
                http://www.springframework.org/schema/integration http://www.springframework.org/schema/integration/spring-integration.xsd
                http://www.springframework.org/schema/integration/stream http://www.springframework.org/schema/integration/stream/spring-integration-stream.xsd
                http://www.springframework.org/schema/rabbit http://www.springframework.org/schema/rabbit/spring-rabbit.xsd
                http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd">

<!-- rabbitmq infrastructure -->
<rabbit:connection-factory id="connectionFactory" username="yi" password="1986441986"/>

<rabbit:template id="amqpTemplate" connection-factory="connectionFactory"
    exchange="directExchange" message-converter="jsonConverter"/><!--routing-key="foo.bar"  -->

<rabbit:admin connection-factory="connectionFactory" />

<!--  declare queues -->
<rabbit:queue name="myQueue" />
<rabbit:queue name="yourQueue"/>

<!-- declare exchanges -->
<rabbit:topic-exchange name="topicExchange">
    <rabbit:bindings>
        <rabbit:binding queue="myQueue" pattern="foo.*" />
    </rabbit:bindings>
</rabbit:topic-exchange>

<rabbit:direct-exchange name="directExchange">
	<rabbit:bindings>
		<rabbit:binding queue="myQueue" key="foo"/>
		<rabbit:binding queue="yourQueue" key="bar"/>
	</rabbit:bindings>
</rabbit:direct-exchange>

<rabbit:fanout-exchange name="fanoutExchange">
	<rabbit:bindings>
		<rabbit:binding queue="myQueue"/>
		<rabbit:binding queue="yourQueue"/>
	</rabbit:bindings>
</rabbit:fanout-exchange>

 
<rabbit:listener-container connection-factory="connectionFactory">
    <rabbit:listener ref="foo" method="listen" queue-names="myQueue" />
</rabbit:listener-container>

<rabbit:listener-container connection-factory="connectionFactory">
    <rabbit:listener ref="bar" method="listen" queue-names="yourQueue" />
</rabbit:listener-container>

<rabbit:listener-container connection-factory="connectionFactory">
    <rabbit:listener ref="myListener" queue-names="yourQueue"/>
</rabbit:listener-container>

<bean id="myListener" class="com.xiao.rabbitmq.MyListener"/>



<bean id="foo" class="com.xiao.rabbitmq.QueueListener">
	<property name="name" value="foo"></property>
</bean>

<bean id="bar" class="com.xiao.rabbitmq.QueueListener">
	<property name="name" value="bar"></property>
</bean>


<!-- message converters. Convert pojo to either json or xml -->
<bean id="jsonConverter" class="org.springframework.amqp.support.converter.Jackson2JsonMessageConverter">
</bean>

<bean id="xmlConverter" class="org.springframework.amqp.support.converter.MarshallingMessageConverter">
	<constructor-arg name="marshaller">
		<bean class="org.springframework.oxm.jaxb.Jaxb2Marshaller">
			<property name="packagesToScan" value="com.xiao.domain"></property>
		</bean>
	</constructor-arg>
</bean>


</beans>
